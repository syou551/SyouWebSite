/// <reference types="node" />
import * as dntShim from "../../_dnt.shims.js";
export declare class TrackError extends Error {
    constructor(message: string);
}
export declare class APIError extends TrackError {
    constructor(message: string);
    static fromResponse(res: dntShim.Response): Promise<APIError>;
    static serializationError(body: string): APIError;
}
export declare class IOError extends TrackError {
    error: Error | string;
    constructor(error: Error | string);
}
export declare class JSONError extends TrackError {
    error: Error;
    constructor(error: Error);
}
export declare class WebsocketError extends TrackError {
    error: Error | Event;
    constructor(error: Error | Event);
}
export declare class ChallengeDirectoryExists extends TrackError {
    path: string;
    constructor(path: string);
}
export declare class ExamUnread extends TrackError {
    webUrl: string;
    constructor(webUrl: string);
}
export declare class ExamExpired extends TrackError {
    constructor();
}
export declare class ExamCanceled extends TrackError {
    constructor();
}
export declare class ExamSubmitted extends TrackError {
    constructor();
}
export declare class MissingConfigFile extends TrackError {
    constructor();
}
export declare class ChallengeAlreadyFinished extends TrackError {
    constructor();
}
export declare class InvalidChallengeId extends TrackError {
    challengeId: number;
    constructor(challengeId: number);
}
export declare class CantChooseLanguage extends TrackError {
    constructor();
}
export declare class NotASingleResponse extends TrackError {
    constructor();
}
export declare class BadTarballURL extends TrackError {
    url: string;
    reason: string;
    constructor(url: string, reason: string);
}
export declare class CantReadFile extends TrackError {
    fileName: string;
    constructor(fileName: string);
}
export declare class FileNotFound extends TrackError {
    fileName: string;
    constructor(fileName: string);
}
export declare class FileMissingOrOutsideDirectory extends TrackError {
    fileName: string;
    constructor(fileName: string);
}
export declare class NewFilesNotAllowed extends TrackError {
    constructor();
}
export declare class DeleteFilesNotAllowed extends TrackError {
    constructor();
}
export declare class LocalCodingNotAllowed extends TrackError {
    url: string;
    constructor(url: string);
}
export declare class OtherError extends TrackError {
    message: string;
    constructor(message: string);
}
