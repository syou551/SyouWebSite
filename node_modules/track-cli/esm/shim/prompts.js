// Temporary fixed version of shims for prompts
// See original version: https://github.com/denoland/node_shims/blob/main/packages/shim-prompts
import * as dntShim from "../_dnt.shims.js";
import { readSync, writeSync } from "fs";
export function alert(message) {
    dntShim.dntGlobalThis.alert(message);
    writeSync(process.stdout.fd, new TextEncoder().encode(`${message} [Enter] `));
    readlineSync();
}
export function confirm(message) {
    writeSync(process.stdout.fd, new TextEncoder().encode(`${message} [y/N] `));
    const result = readlineSync();
    return ["y", "Y"].includes(result);
}
export function prompt(message, defaultValue = undefined) {
    writeSync(process.stdout.fd, new TextEncoder().encode(`${message} ${defaultValue == null ? "" : `[${defaultValue}]`} `));
    const result = readlineSync();
    return result.length > 0 ? result : defaultValue ?? null;
}
function readlineSync() {
    let line = "";
    let char = "";
    const buf = Buffer.alloc(1);
    while (char !== "\r" && char !== "\n") {
        line += char;
        try {
            const bytesRead = readSync(process.stdin.fd, buf, 0, 1, null);
            if (bytesRead === 0) {
                return line;
            }
        }
        catch (err) {
            if (err.code === "EOF") {
                return line;
            }
            continue;
        }
        char = String(buf);
    }
    if (char === "\r") {
        readSync(process.stdin.fd, buf, 0, 1, null);
    }
    return line;
}
